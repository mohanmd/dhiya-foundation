plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    // namespace "com.iproat.dhiyafoundation"
    // namespace "com.iproat.alnasr"
    compileSdk localProperties.getProperty("flutter.compileSdkVersion").toInteger()
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // applicationId "com.iproat.dhiyafoundation"
        // applicationId "com.iproat.alnasr"  
        minSdkVersion localProperties.getProperty("flutter.minSdkVersion").toInteger()
        targetSdkVersion localProperties.getProperty("flutter.targetSdkVersion").toInteger()
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "store"
    productFlavors {
        dhiyafoundation{
            dimension "store"
            resValue "string", "app_name", "Dhiya Foundation"
            applicationId "com.iproat.dhiyafoundation"
            namespace "com.iproat.dhiyafoundation"
        }
        gse{
            dimension "store"
            resValue "string", "app_name", "Global Safety Enterprices"
            applicationId "com.iproat.gse"
            namespace "com.iproat.gse"
        }
    }
}

flutter {
    source '../..'
}
dependencies {
    implementation 'com.android.support:multidex:2.0.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3' 
}

